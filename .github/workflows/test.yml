name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request: 
    branches: [ "main" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP on macOS
        if: runner.os == 'macOS'
        run: |
          curl -L https://dl.static-php.dev/static-php-cli/common/php-8.3.11-cli-macos-aarch64.tar.gz -o php.tar.gz
          tar -xzf php.tar.gz
          sudo mv php /usr/local/bin/php
          php --version

      - name: Setup PHP on Windows
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -Uri "https://dl.static-php.dev/static-php-cli/windows/spc-max/php-8.3.11-cli-win.zip" -OutFile "php.zip"
          Expand-Archive -Path "php.zip" -DestinationPath "C:\php"
          echo "C:\php" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          php --version

      - name: Run app
        run: php sqlite_viewer.php test/database.sqlite --port 9000 > server.log 2>&1 &
        shell: bash

      - name: Wait for server to start
        run: |
          for i in {1..10}; do
              curl -s http://localhost:9000 && break
              sleep 1
          done
        shell: bash

      - name: Run tests
        run: php test/test.php
        shell: bash

      - name: Debug
        if: always()
        run: cat server.log
        shell: bash

  php-version-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ "7.0", "7.1", "7.2", "7.3", "7.4", "8.0", "8.1", "8.2", "8.3" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, sqlite3
          coverage: none

      - name: Run app
        run: php sqlite_viewer.php test/database.sqlite --port 9000 > server.log 2>&1 &
        shell: bash

      - name: Wait for server to start
        run: |
          for i in {1..10}; do
              curl -s http://localhost:9000 && break
              sleep 1
          done
        shell: bash

      - name: Run tests
        run: php test/test.php
        shell: bash

      - name: Debug
        if: always()
        run: cat server.log
        shell: bash

  os-version-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04', 'macos-12', 'windows-2019']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, sqlite3
          coverage: none

      - name: Run app
        run: php sqlite_viewer.php test/database.sqlite --port 9000 > server.log 2>&1 &
        shell: bash

      - name: Wait for server to start
        run: |
          for i in {1..10}; do
              curl -s http://localhost:9000 && break
              sleep 1
          done
        shell: bash

      - name: Run tests
        run: php test/test.php
        shell: bash

      - name: Debug
        if: always()
        run: cat server.log
        shell: bash
